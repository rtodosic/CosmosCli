# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build .Net, Version and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Install Versionize
      run: dotnet tool install --global Versionize

    - name: Install dotnet format
      run: dotnet tool install -g dotnet-format

    - name: Setup git
      run: |
        git config --local user.email "rtodosic@hotmail.com"
        git config --local user.name "Richard Todosichuk"

    - name: Restore dependencies
      run: dotnet restore

    - name: Versionize Release
      id: versionize
      run: versionize --exit-insignificant-commits
      continue-on-error: true

    - name: Pack
      run: dotnet pack -c Release

    - name: Undo husky changes
      run: |
        git checkout .husky/commit-msg
        git checkout .husky/pre-commit
        git checkout .husky/_/.gitignore
        git checkout .husky/_/husky.sh

    - name: No release required
      if: steps.versionize.outcome != 'success'
      run: echo "Skipping Release. No release required."
  
    - name: Get most recent tag
      if: steps.versionize.outcome == 'success'
      id: tag
      run: |
        tag=$(git describe --tags --abbrev=0)
        echo "tag=$tag" >> $GITHUB_OUTPUT  
        
    - name: Create GitHub Release
      if: steps.versionize.outcome == 'success'
      id: create_release
      uses: ncipollo/release-action@v1.14.0
      with:
        artifacts: "**/*.nupkg"
        name: ${{ steps.tag.outputs.tag }}
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ steps.tag.outputs.tag }}
        body: |
          Release notes [${{ steps.tag.outputs.tag }}](https://github.com/rtodosic/CosmosCli/blob/main/CHANGELOG.md)
  
    - name: Push changes to GitHub
      if: steps.versionize.outcome == 'success'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
        tags: true
